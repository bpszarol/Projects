
@{
    ViewBag.Title = "Project3";
}
<head>
    <h2>Your reservations (<span data-bind="text: seats().length"></span>)</h2>
    <script src="~/Scripts/knockout-3.4.1.js"></script>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>Passenger name</th>
                <th>Meal</th>
                <th>Surcharge</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="foreach: seats">
            <tr>
                <td><input data-bind="value: name" /></td>
                <td><select data-bind="options: $root.availableMeals, value: meal, optionsText: 'mealName'"></select></td>
                <td data-bind="text: formattedPrice"></td>
                <td><a href="#" data-bind="click: $root.removeSeat">Remove</a></td>
            </tr>
        </tbody>
    </table>

    <button data-bind="click: addSeat, enable:seats().length < 5">Reserve another seat(Max 5)</button>
    <h3 data-bind="visible: totalSurcharge() > 0"> total Surcharge: $<span data-bind="text: totalSurcharge().toFixed(2)"></span></h3>

    <script>
        // Class to represent a row in the seat reservations grid
        function SeatReservation(name, initialMeal) {
            var self = this;
            self.name = name;
            self.meal = ko.observable(initialMeal);

            // a method for formatting the price (puts a $ at the front of the ammount)
            self.formattedPrice = ko.computed(function () {
                var price = self.meal().price;
                return price ? "$" + price.toFixed(2) : "None";
            });
        }

        // Overall viewmodel for this screen, along with initial state
        function ReservationsViewModel() {
            var self = this;

            // Non-editable catalog data - would come from the server
            self.availableMeals = [
                { mealName: "Standard (sandwich)", price: 0 },
                { mealName: "Standard (veg sandwich)", price: 0 },
                { mealName: "Premium (lobster)", price: 20 },
                { mealName: "Premium (steak)", price: 25.99 },
                { mealName: "Deluxe (lobster and steak)", price: 35.90 }
            ];

            // Editable data
            self.seats = ko.observableArray([
                new SeatReservation("", self.availableMeals[0])
            ]);

            // Operations
            self.addSeat = function () {
                self.seats.push(new SeatReservation("", self.availableMeals[0]));
            }

            //Adds functionality to the remove option
            self.removeSeat = function (seat) { self.seats.remove(seat); }

            //This calculated the total based on all the elements of the list
            self.totalSurcharge = ko.computed(function () {
                var total = 0;
                for (var i = 0; i < self.seats().length; i++)
                    total += self.seats()[i].meal().price;
                return total;
            });
        }

        //Apply the script
        ko.applyBindings(new ReservationsViewModel());
    </script>
</body>
